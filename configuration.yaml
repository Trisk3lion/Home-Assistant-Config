homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret ha_lat
  longitude: !secret ha_long
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret ha_elev
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Stockholm
  customize:
    sensor.alarm_clock_hour:
      hidden: true
    sensor.alarm_clock_minute:
      hidden: true
    sensor.alarm_clock_time:
      friendly_name: Alarm Clock Setting
    sensor.alarm_clock_time_long:
      hidden: true
    input_boolean.alarm_clock_status:
      friendly_name: Alarm Clock Status
      icon: mdi:alarm-check
    input_slider.alarm_clock_hour:
      friendly_name: Hour
      icon: mdi:timer
    input_slider.alarm_clock_minute:
      friendly_name: Minute
      icon: mdi:timer

# Enables the frontend
frontend:

# Enables configuration UI
config:


http:
  # Uncomment this to add a password (recommended!)
  api_password: !secret http_password
  # Uncomment this if you are using SSL or running in Docker etc
  base_url: !secret http_url

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:

# Discover some devices automatically
discovery:

nuimo_controller:

media_player:
  - platform: spotify
    client_id: !secret spot_client_id
    client_secret: !secret spot_client_secret
  - platform: cast
#  - platform: ps4
#    host: !secret ps4_host

ifttt:
  key: !secret ifttt_key

mqtt:
  broker: !secret mqtt_ip
  port: !secret mqtt_port
  client_id: home-assistant-1
  username: !secret mqtt_user
  password: !secret mqtt_pass

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:

# Track the sun
sun:

switch:
  - platform: mqtt
    name: "Corner Lamp"
    state_topic: "smartthings/Corner Lamp/switch"
    command_topic: "smartthings/Corner Lamp/switch"
    payload_on: "on"
    payload_off: "off"
    retain: true
# Weather Prediction
sensor:
  - platform: darksky
    api_key: !secret darksky_key
    monitored_conditions:
      # - summary
      # - icon
      # - nearest_storm_distance
      # - nearest_storm_bearing
      - precip_type
      - precip_intensity
      - precip_probability
      - temperature
      - apparent_temperature
      # - dew_point
      # - wind_speed
      # - wind_bearing
      - cloud_cover
      - humidity
      # - pressure
      - visibility
      # - ozone
      - minutely_summary
      - hourly_summary
      - daily_summary
      - temperature_max
      - temperature_min
      - apparent_temperature_max
      - apparent_temperature_min
      - precip_intensity_max
  - platform: pi_hole
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
  - platform: systemmonitor
    resources:
     - type: disk_use_percent
       arg: /home
     - type: memory_free
     - type: processor_use
     - type: last_boot
  #Alarm Clock sensor
  - platform: template
    sensors:
      alarm_clock_hour:
        value_template: '{{ states.input_slider.alarm_clock_hour.state|int }}'
      alarm_clock_minute:
        value_template: '{{ states.input_slider.alarm_clock_minute.state|int }}'
      alarm_clock_time:
        value_template: >-
          {{ states.sensor.alarm_clock_hour.state }}:
          {%- if states.sensor.alarm_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_minute.state }}
      alarm_clock_time_long:
        value_template: >-
          {% if states.sensor.alarm_clock_hour.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_hour.state }}:
          {%- if states.sensor.alarm_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_minute.state }}

script:  
  spotifydemo:
    alias: 'Spotify on Home'
    sequence:
      - service: media_player.select_source
        data:
          entity_id: media_player.spotify
          source: Living room Home
      - service: media_player.shuffle_set
        data: 
          entity_id: media_player.spotify
          shuffle: 'true'
      - service: media_player.play_media
        data:
          entity_id: media_player.spotify
          media_content_type: playlist
        data_template:
          media_content_id: 'spotify:user:trisk3lion:playlist:1KH7pw5kxsppOdINedp8Ub'

#automation:
  #alias: Startup Notification
  #trigger:
    #platform: ifttt
    #event_type: media_player.start
  #action:
    #service
# Text to speech
tts:
  platform: google

#ssl_certificate: '/etc/letsencrypt/live/kribbstarha.duckdns.org/fullchain.pem'
#ssl_key: '/etc/letsencrypt/live/kribbstarha.duckdns.org/privkey.pem'

input_slider:
  alarm_clock_hour:
    initial: 6
    min: 0
    max: 23
    step: 1
  alarm_clock_minute:
    initial: 15
    min: 0
    max: 55
    step: 5

input_boolean:
  alarm_clock_status:
    initial: on

# device_tracker:
  # - platform: tomato
    # host: !secret tomato_ip
    # username: !secret tomato_user
    # password: !secret tomato_pass
    # http_id: !secret tomato_id
 
group: !include groups.yaml
